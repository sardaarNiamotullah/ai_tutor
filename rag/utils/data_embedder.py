from sentence_transformers import SentenceTransformer
from .data_chunker import chunk_text

# Initialize the multilingual SentenceTransformer model.
# This pre-trained model supports multiple languages including Bangla and English,
# and converts text chunks into dense vector embeddings suitable for semantic search.
model = SentenceTransformer("paraphrase-multilingual-MiniLM-L12-v2")

def chunk_and_embed(cleaned_text, language):
    """
    Splits the cleaned input text into smaller chunks and generates vector embeddings for each chunk.

    Args:
        cleaned_text (str): The cleaned and preprocessed full text from the document.
        language (str): The detected language of the text (e.g., 'bn' for Bangla, 'en' for English).

    Returns:
        Tuple[List[str], List[List[float]]]:
            - chunks: A list of text chunks after chunking based on language-specific rules.
            - embeddings: A list of vector embeddings (as float lists) for each chunk, 
              generated by the SentenceTransformer model.

    Process:
        1. Calls the chunk_text function to split the cleaned text into manageable chunks 
           that are optimized for embedding and retrieval.
        2. Uses the SentenceTransformer model to convert each chunk into a dense semantic vector.
           These embeddings capture the meaning of the text chunks in a high-dimensional space.
        3. Converts the embeddings from numpy arrays to Python lists for easier storage or JSON serialization.

    Note:
        - Chunking is important because transformer models have maximum input lengths, 
          so large texts must be broken down.
        - Embeddings enable efficient semantic search using vector similarity (e.g., cosine similarity).
    """
    # Step 1: Chunk the cleaned text based on detected language
    chunks = chunk_text(cleaned_text, language)

    # Step 2: Generate embeddings for each chunk using the multilingual sentence transformer model
    embeddings = model.encode(chunks).tolist()

    # Step 3: Return both the list of chunks and their corresponding embeddings
    return chunks, embeddings
